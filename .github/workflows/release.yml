name: Release

on:
  push:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64, 386, arm64]
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get release preparation files
        run: 
          git clone https://github.com/vmessocket/release.git

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM\"].friendlyName" -r < release/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Get project dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p build
          go build -v -o build/vmessocket -trimpath -ldflags "-s -w -buildid=" ./main

      - name: Add exe suffix for windows
        if: matrix.goos == 'windows'
        run: |
          cd ./build || exit 1
          mv vmessocket vmessocket.exe

      - name: Download geo files
        run: |
          wget -O release/config/geoip.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip.dat"
          wget -O release/config/geoip-only-cn-private.dat "https://raw.githubusercontent.com/v2fly/geoip/release/geoip-only-cn-private.dat"
          wget -O release/config/geosite.dat "https://raw.githubusercontent.com/v2fly/domain-list-community/release/dlc.dat"

      - name: Prepare package
        run: cp -v ./release/config/*.* ./build

      - name: Create ZIP archive
        run: |
          pushd build || exit 1
          zip -9vr ../vmessocket-$ASSET_NAME.zip .
          popd || exit 1

      - name: Upload ZIP file to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vmessocket-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
          path: vmessocket-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
      
      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./vmessocket-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
