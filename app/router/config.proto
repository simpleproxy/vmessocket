syntax = "proto3";

package vmessocket.core.app.router;
option csharp_namespace = "vmessocket.Core.App.Router";
option go_package = "github.com/vmessocket/vmessocket/app/router";
option java_package = "com.vmessocket.core.app.router";
option java_multiple_files = true;

import "common/net/port.proto";
import "common/net/network.proto";

message Domain {
  enum Type {
    Plain = 0;
    Regex = 1;
    Domain = 2;
    Full = 3;
  }

  Type type = 1;

  string value = 2;

  message Attribute {
    string key = 1;

    oneof typed_value {
      bool bool_value = 2;
      int64 int_value = 3;
    }
  }

  repeated Attribute attribute = 3;
}

message CIDR {
  bytes ip = 1;
  uint32 prefix = 2;
}

message GeoIP {
  string country_code = 1;
  repeated CIDR cidr = 2;
  bool reverse_match = 3;
}

message GeoIPList {
  repeated GeoIP entry = 1;
}

message GeoSite {
  string country_code = 1;
  repeated Domain domain = 2;
}

message GeoSiteList {
  repeated GeoSite entry = 1;
}

message RoutingRule {
  oneof target_tag {
    string tag = 1;
    string balancing_tag = 12;
  }

  repeated Domain domain = 2;

  repeated CIDR cidr = 3 [deprecated = true];

  repeated GeoIP geoip = 10;

  vmessocket.core.common.net.PortRange port_range = 4 [deprecated = true];

  vmessocket.core.common.net.PortList port_list = 14;

  vmessocket.core.common.net.NetworkList network_list = 5 [deprecated = true];

  repeated vmessocket.core.common.net.Network networks = 13;

  repeated CIDR source_cidr = 6 [deprecated = true];

  repeated GeoIP source_geoip = 11;

  vmessocket.core.common.net.PortList source_port_list = 16;

  repeated string user_email = 7;
  repeated string inbound_tag = 8;
  repeated string protocol = 9;

  string attributes = 15;

  string domain_matcher = 17;
}

message BalancingRule {
  string tag = 1;
  repeated string outbound_selector = 2;
  string strategy = 3;
}

message Config {
  enum DomainStrategy {
    AsIs = 0;

    UseIp = 1;

    IpIfNonMatch = 2;

    IpOnDemand = 3;
  }
  DomainStrategy domain_strategy = 1;
  repeated RoutingRule rule = 2;
  repeated BalancingRule balancing_rule = 3;
}
